* cl-extempore
*** Orm Finnendahl

Common Lisp translation of parts of [[Https://github.com/digego/extempore][Extempore]] by Andrew
Sorensen. Needs incudine, JACK and a Midi Softsynth/Hardware
Synthesizer.

** Dependencies

   - [[https://incudine.sourceforge.net/][incudine]]

   - [[https://jackaudio.org/][JACK]]

   - A Midi Softsynth (e.g. [[https://qsynth.sourceforge.io/][Qsynth]]) or a Hardware Synthesizer
     connected to the Midi output of the Computer's Soundcard.

** Installation

   For quicklisp enabled lisp systems copy/link the cl-extempore
   folder into =~/quicklisp/local-projects/=.
   
** Usage

   Start a midi softsynth with a general midi soundfont loaded (like
   qsynth with freepats on linux)

   Then:

   =(ql:quickload "cl-extempore")=

   After connecting incudine to the softsynth, the following statement
   should play a piano sound for 0.5 seconds with keynum 60 on channel
   0 of the softsynth:

   =(funcall (play-instrument :piano) :time 0 :keynum 60 :duration 1 :channel 1)=

   If using emacs+slime, evaluating the code in "elisp-setup.lisp"
   will result in the definition of the following keyboard shortcuts
   for the repl and for any lisp buffer:

|---------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| C-.           | remove all events from the scheduler and stop all currently playing midi-notes. This will also immediately terminate all temporal recursion                                                                                                                                                                                                         |
|---------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| C-c\nbsp{}C-. | stop all dsp processing. This will remove all incudine entries in jack-audio and jack-midi.                                                                                                                                                                                                                                                         |
|---------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| C-\nbsp{}M-.  | restart incudine's dsp-processing. This will list all active jack-audio and jack-midi ports: Be aware that this doesn't necessarily re-establish the connections to the softsynth or audio hardware. Set up a persistent jack patchbay for autoconnecting (like the one available in qjackctl) or connect manually after restarting dsp-processing. |
|---------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
         
   Check the contents of the "examples" folder for examples taken from
   YouTube video performances of Andrew Sorensen. There are some minor
   differences:

   - extempore's =callback= is replaced by incudine's =at=

   - =:|= in the pattern language is replaced with =:<=

   - the =play= function requires the beat as second and the
     instrument to use as third argument. The midi channel is given to
     =play= using the =:channel= keyword and a channel value in the
     range [1-16] at the end of the arguments.

     The instrument names are implemented as keywords derived from the
     general midi specification (see "instruments.lisp" for available
     names).

   - an additional (optional) number inserted before the notelists of
     the =:>= macro indicates the number of repetitions of the
     toplevel loop before autostopping of the pattern (contrary to the
     default of endless looping).

** Extensions

   Other instruments, like software/dsp/incudine based synths can be
   easily get added using =define-instrument=. This function should
   return a closure which will produce sound when called with the
   =:time= =:keynum= =:duration= and =:amplitude= properties (e.g. using the
   =play= function). Additional properties specific to the synth can
   get added at the end of a call to the =#'play= function.
   
** License

gpl 2.0 or later.

